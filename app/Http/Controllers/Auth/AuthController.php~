<?php

namespace App\Http\Controllers\Auth;
use Auth;
use DB;
use App\User;
use Validator;
use App\Http\Controllers\Controller;
use App\Http\Controllers\Auth\Route;
use Illuminate\Foundation\Auth\ThrottlesLogins;
use Illuminate\Foundation\Auth\AuthenticatesAndRegistersUsers;
use Illuminate\Contracts\Auth\Authenticatable;
use Illuminate\Http\Request;

class AuthController extends Controller
{
    /*
    |--------------------------------------------------------------------------
    | Registration & Login Controller
    |--------------------------------------------------------------------------
    |
    | This controller handles the registration of new users, as well as the
    | authentication of existing users. By default, this controller uses
    | a simple trait to add these behaviors. Why don't you explore it?
    |
    */

    use AuthenticatesAndRegistersUsers, ThrottlesLogins;

    /**
     * Where to redirect users after login / registration.
     *
     * @var string
     */
    protected $redirectTo = '/';

    /**
     * Create a new authentication controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware($this->guestMiddleware(), ['except' => 'logout']);
    }

    /**
     * Get a validator for an incoming registration request.
     *
     * @param  array  $data
     * @return \Illuminate\Contracts\Validation\Validator
     */
    protected function validator(array $data)
    {
        return Validator::make($data, [
            'login' => 'required|min:25',
            'password' => 'required|min:6|confirmed',
        ]);
    }

    /**
     * Create a new user instance after a valid registration.
     *
     * @param  array  $data
     * @return User
     */
    protected function create(array $data)
    {
        return User::create([
            'login' => $data['login'],
	    'password' => bcrypt($data['password']),
            'first_name' => $data['first_name'],
       	    'last_name' => $data['last_name'],
	    'email' => $data['email'],
	    'birth_date' => $data['birth_date'],
	    'sex' => $data['sex'],
	    'age' => $data['age'],
	    'city' => $data['city'],
	    'telephone' => $data['telephone'],
	    'join_date' => $data['date'],
	    'is_online' => $data['is_online']
        ]);
    }

    public function check_and_login(Request $request)
    {
	$name = $request->input('email');
	$password = $request->input('password');
	$credentials=['login' => $name, 'password' => $password];
	$id=User::authenticate_user($credentials);
	if(!empty($id))
	{
		Auth::loginUsingId($id);
            	return redirect()->intended('tournaments');
        }
	else
	{
		return redirect('login')->with(['message'=>'błąd zalogowania']);
	}
    
    }



    public function register_and_login(Request $request)
    {
	$wynik=Validator::make($request->all(), [
            'email' => 'required|min:6',
            'password' => 'required|min:6'
        ]);
	if($wynik->fails()) {
        	return redirect('register')
            	->withInput()
            	->withErrors($wynik);
    	}
	$dane=[];
	$dane['login']=$request->input('login');
	$dane['password']=$request->input('password');
	$dane['first_name']=$request->input('first_name');
	$dane['last_name']=$request->input('last_name');
	$dane['email']=$request->input('email');
	$dane['birth_date']=$request->input('birth_date');
	$dane['sex']=$request->input('sex');
	$dane['age']=18;
	$dane['city']=$request->input('city');
	$dane['telephone']=$request->input('telephone');
	$dane['join_date']=$request->input('join_date');

	print_r($dane);

	$wyn=User::add_user($dane);
	//$wynik=//redirect('user/1');
	echo $wyn;
	exit();
/*
//echo "czy_dodane=  ".$dod;
	$name=$_POST['email'];
	$password=$_POST['password'];
	$wyn=DB::select("select * from arunz.users");
	print_r($wyn);
	if(!$wynik)
	{
	     echo 'nie zwalidowany';	
	}
	echo 'zwalidowany';	
	echo '<br/>';
	echo '<br/>';
	print_r($name);
	echo '<br/>';
	print_r($password);
	echo '<br/>';
	
        if (Auth::attempt(['login' => $name, 'password' => $password])) {
            // Authentication passed...
		echo 'Zalogowany';
            return redirect()->intended('tournaments');
        }
	echo 'nie zalogowany';
	//Auth::login($name);
	Auth::loginUsingId(1);
	return redirect('tournaments');*/
    }

	public function logout()
	{
		Auth::logout();
		return redirect("/");		
	}

	public function getAuthIdentifierName()
	{}
	public function getAuthIdentifier()
	{}
	public function getAuthPassword()
	{}
	public function getRememberToken()
	{}
	public function setRememberToken($value)
	{}
	public function getRememberTokenName()
	{}
}
